{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Content: Card Paragraph field values
 * - field_card_header: Card header text
 * - field_card_footer: Card footer text
 * - field_wysiwyg: Card Body
 * - field_media: media for card image
 * - overlay_link: overlay link (uri)
 * - overlay_link_title: overlay link title
 * - text_position: key value to determine overlay text position
 * - card_header_bg_color: key value class to set bg color of header
 * - card_footer_bg_color: key value class to set bg color of footer
 * - card_horizontal_rule: boolean value to determine if HR should be used between image and body
 * - card_image_type: key value to set type of card image
 * - text_alignment: key value class for text alignment
 * - padding_top: key value class for card body padding top
 * - padding_right: key value class for card body padding right
 * - padding_bottom: key value class for card body padding bottom
 * - padding_left: key value class for card body padding left
 * - text_color: key value class for text color
 * - border_color: Sets the card border color
 * - text_color_cu: Sets the header/footer text color
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'card h-100',
    text_alignment ? text_alignment|clean_class,
    text_color ? text_color|clean_class,
    border_color ? 'has-border ' ~ border_color|clean_class,
    overlay_link ? 'has-overlay'
  ]
%}
{% set h_classes = [
    'card-header',
    card_header_bg_color ? card_header_bg_color|clean_class,
    text_color_cu ? text_color_cu|clean_class
  ]
%}
{% set f_classes = [
    'card-footer',
    card_footer_bg_color ? card_footer_bg_color|clean_class,
    text_color_cu ? text_color_cu|clean_class
  ]
%}
{% set body_classes = [
    'card-body',
    padding_top ? padding_top|clean_class,
    padding_right ? padding_right|clean_class,
    padding_bottom ? padding_bottom|clean_class,
    padding_left ? padding_left|clean_class
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {% if content.field_media[0] and card_image_type != 'card-img-bottom' %}
        {{ drupal_image(content.field_media[0]['#media'].field_media_image.entity.uri.value, content.field_media[0]['#view_mode'], {alt: content.field_media[0]['#media'].field_media_image.value.0.alt|t, class: card_image_type|clean_class}, responsive=true) }}
      {% endif %}
      {% if content.field_card_header[0] %}
        <div{{ attributes.addClass(h_classes).removeClass(classes).removeClass(body_classes) }}>{{ content.field_card_header }}</div>
      {% endif %}
      {% if content.field_wysiwyg %}
        {% if content.field_media and card_image_type == 'card-img' %}
          <div class="card-img-overlay">
          {% if overlay_link %}
            <a href="{{ overlay_link }}" class="stretched-link" title="{{ overlay_link_title }}"></a>
            {% if text_position == 'top' %}
              <div class="card-img-overlay--text position-absolute top-0 start-50 translate-middle-x">
            {% elseif text_position == 'middle' %}
              <div class="card-img-overlay--text position-absolute top-50 start-50 translate-middle">
            {% elseif text_position == 'bottom' %}
              <div class="card-img-overlay--text position-absolute bottom-0 start-50 translate-middle-x">
            {% endif %}
          {% endif %}
        {% else %}
          <div{{ attributes.addClass(body_classes).removeClass(classes).removeClass(h_classes).removeClass(f_classes) }}>
        {% endif %}
        {% if card_horizontal_rule %}
          <hr class="br-cu-gold my-3" role="separator">
        {% endif %}
        {{ content.field_wysiwyg }}
        {% if content.field_media and card_image_type == 'card-img' and text_position %}
          </div>
        {% endif %}
        </div>
      {% endif %}
      {% if content.field_card_footer[0] %}
        <div{{ attributes.addClass(f_classes).removeClass(classes).removeClass(body_classes) }}>{{ content.field_card_footer }}</div>
      {% endif %}
      {% if content.field_media and card_image_type == 'card-img-bottom' %}
      {{ drupal_image(content.field_media[0]['#media'].field_media_image.entity.uri.value, content.field_media[0]['#view_mode'], {alt: content.field_media[0]['#media'].field_media_image.value.0.alt|t, class: card_image_type|clean_class}, responsive=true) }}
      {% endif %}
    {% endblock %}
  </div>
{% endblock paragraph %}
