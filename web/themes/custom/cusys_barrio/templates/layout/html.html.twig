{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - path_info.args: Array of URL arguments un aliassed.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 * - is_unpublished: Boolean if node is published
 *
 * @see template_preprocess_html()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'node--type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
    'cusys-barrio',
    is_unpublished ? 'node-unpublished',
  ]
%}
<!DOCTYPE html>
<html{{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token|raw }}">
    <link rel="preload" href="//fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900,regular&subset=latin&display=swap" as="font">
    <link rel="preload" href="//use.fontawesome.com/releases/v5.13.0/webfonts/fa-brands-400.woff2" as="font">
    <link rel="preload" href="//cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="//cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" as="script">
    <link rel="preload" href="//use.fontawesome.com/releases/v5.13.0/css/all.css" as="style">
    <link rel="preconnect" href="//fonts.gstatic.com" crossorigin="">
    <link rel="preconnect" href="//connect.facebook.net" crossorigin="">
    <link rel="dns-prefetch" href="//pi.pardot.com">
    <link rel="preconnect" href="//info.cuonline.edu" crossorigin="">
    <link rel="preconnect" href="//www.googletagmanager.com/" crossorigin="">
    
    <title>{{ head_title|safe_join(' | ') }}</title>
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
    <link rel="apple-touch-icon" sizes="120x120" href="/themes/custom/cusys_barrio/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/themes/custom/cusys_barrio/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/themes/custom/cusys_barrio/images/favicon-16x16.png">
    <script language="javascript">
        //TODO: Add this script using gulp to minimize
        var ExpireDays = 30;
        qstr = document.location.search;
        qstr = qstr.substring(1, qstr.length);
        function SetCookie(cookieName, cookieValue, nDays) {
            var domain = get_top_domain(window.location.host);
            var today = new Date();
            var expire = new Date();
            if (nDays == null || nDays == 0) nDays = 1;
            expire.setTime(today.getTime() + 3600000 * 24 * nDays);
            document.cookie = cookieName + "=" + escape(cookieValue) + "; expires=" + expire.toGMTString() + "; path=/; domain=." + domain + ";";
        }
        thevars = qstr.split("&");
        for (i = 0; i < thevars.length; i++) {
            cookiecase = thevars[i].split("=");
            switch (cookiecase[0]) {
                case "utm_source":
                    utm_source = cookiecase[1];
                    SetCookie("STYXKEY-utm_source", utm_source, ExpireDays);
                    break;
                case "utm_medium":
                    utm_medium = cookiecase[1];
                    SetCookie("STYXKEY-utm_medium", utm_medium, ExpireDays);
                    break;
                case "utm_campaign": //name
                    utm_campaign = cookiecase[1];
                    SetCookie("STYXKEY-utm_campaign", utm_campaign, ExpireDays);
                    break;
                case "utm_term":
                    utm_term = cookiecase[1];
                    SetCookie("STYXKEY-utm_term", utm_term, ExpireDays);
                    break
                case "utm_content":
                    utm_content = cookiecase[1];
                    SetCookie("STYXKEY-utm_content", utm_content, ExpireDays);
                    break;
                default:
                    break;
            }
        }
        
        function get_top_domain(){
          var i,h,
            weird_cookie='weird_get_top_level_domain=cookie',
            hostname = document.location.hostname.split('.');
          for(i=hostname.length-1; i>=0; i--) {
            h = hostname.slice(i).join('.');
            document.cookie = weird_cookie + ';domain=.' + h + ';';
            if(document.cookie.indexOf(weird_cookie)>-1){
              // We were able to store a cookie! This must be it
              document.cookie = weird_cookie.split('=')[0] + '=;domain=.' + h + ';expires=Thu, 01 Jan 1970 00:00:01 GMT;';
              return h;
            }
          }
        }
    </script>
    <script>
    function getCookie(cname) {
      var name = cname + "=";
      var decodedCookie = decodeURIComponent(document.cookie);
      var ca = decodedCookie.split(';');
      for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
      // Set Hidden Form Values
    }
    
    </script>
    
  </head>
  <body{{ attributes.addClass(body_classes) }}>
  
    <a href="#main-content" class="visually-hidden-focusable skip-link">
      {{- 'Skip to main content'|t -}}
    </a>
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">

    <script>
    
    let utms = ['source', 'medium', 'campaign', 'term', 'content'];
    let utmField = [];
    let utmValues = [];
    for (const element of utms) {
      utmField[element] = document.getElementsByName('cms_utm_' + element);
      utmValues[element] = getCookie('STYXKEY-utm_' + element);
      if (utmField[element] && utmValues[element]) {
        for (var i = 0; i < utmField[element].length; ++i) {
          var item = utmField[element][i];  
          item.value = utmValues[element];
        }
      }
    }
    
    var assignToField = document.getElementsByName('cms_assign_to');
    var assignToCookie = decodeURI(getCookie('STYXKEY-webform_testing_cookie'));
    if (assignToField && assignToCookie) {
      for (var i = 0; i < assignToField.length; ++i) {
        var item = assignToField[i];  
        item.value = assignToCookie;
       }
    }
    
    var pageSourceField = document.getElementsByName('page_source');
    if (pageSourceField) {
      for (var i = 0; i < pageSourceField.length; ++i) {
        var item = pageSourceField[i];  
        item.value = window.location.pathname;
       }
    }
    
  </script>
  </body>
</html>
